buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        flatDir {
            dirs '$rootProject.projectDir/libs'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

apply plugin: "net.minecraftforge.gradle.forge"

sourceSets {
    main {
        java {srcDirs = ["$projectDir/src/main/java"]}
        resources {srcDirs = ["$projectDir/src/main/resources"]}
    }
}

version = project.mod_version
/*
 * Copyright (C) 2021 Ringosham
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

// http://maven.apache.org/guides/mini/guide-naming-conventions.html
group = project.group_name
archivesBaseName = "[1.8.9]RealTimeTranslation"
minecraft.version = project.forge_version
minecraft.mappings = project.mappings_version

minecraft {
    version = project.forge_version
    runDir = "eclipse/assets"
    sourceCompatibility=7
    targetCompatibility=7

    replace '%mod_id%', project.mod_id
    replace '%mod_name%', project.mod_name
    replace '%mod_version%', project.mod_version
    replace '%minecraft_version%', project.minecraft_version
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env
    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from configurations.embed.collect { it.isDirectory() ? it : zipTree(it)}
}