buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: 'idea'

sourceSets {
    main {
        java {srcDirs = ["$projectDir/src/main/java"]}
        resources {srcDirs = ["$projectDir/src/main/resources"]}
    }
}

version = project.mod_version
// http://maven.apache.org/guides/mini/guide-naming-conventions.html
group = project.group_name
archivesBaseName = "[" + project.minecraft_version + "]RealTimeTranslation"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: project.mappings_channel, version: project.mappings_version
    ant.replaceregexp(match: "\\d(\\.\\d){1,2}", replace: "$project.mod_version", flags: 'g', byline: true) {
        fileset(dir: "$projectDir/src/main/java/com/ringosham/translationmod", includes: "TranslationMod.java")
    }
    ant.replaceregexp(match: "\\d(\\.\\d){1,2}", replace: "$project.mod_version", flags: 'g', byline: true) {
        fileset(dir: "$projectDir/src/main/resources", includes: "mcmod.info")
    }


    runs {
        client {
            workingDirectory project.file('env')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env
    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    minecraft 'net.minecraftforge:forge:' + project.forge_version
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_name,
                "Specification-Vendor"    : project.mod_vendor,
                "Specification-Version"   : project.mod_version, // We are version 1 of ourselves
                "Implementation-Title"    : project.mod_name,
                "Implementation-Version"  : project.mod_version,
                "Implementation-Vendor"   : project.mod_vendor,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
jar.finalizedBy('reobfJar')